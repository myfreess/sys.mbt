name: check

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

jobs:
  stable-check:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4

      - name: install
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: install on windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Set-ExecutionPolicy RemoteSigned -Scope CurrentUser; irm https://cli.moonbitlang.com/install/powershell.ps1 | iex
          "C:\Users\runneradmin\.moon\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: moon version
        run: |
          moon version --all

      - name: cc version
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cc -v

      - name: moon check
        run: moon check --target native

      - name: moon info
        run: |
          moon info --target native
          rm src/errno/linux/linux.mbti
          rm src/errno/win32/win32.mbti
          git diff --exit-code

      - name: format diff
        run: |
          moon fmt
          git diff --exit-code

      - name: Set ulimit and run moon test
        env: 
          MOON_CC: 'cc -fsanitize=address -fsanitize=undefined -g -fno-omit-frame-pointer'
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          ulimit -s 8176
          moon test --target native
          moon test --target native --release
          pushd tests
          moon test --target native -v
          moon test --target native --release -v
          popd
          git diff --exit-code

      - name: Setup MSVC
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1
      
      - name: Run moon test on Windows (--target native)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Set-ExecutionPolicy -Scope CurrentUser UnRestricted
          .\check_then_test.ps1 -Mode "CI"
          git diff --exit-code

  bleeding-check:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4

      - name: install
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash -s 'bleeding'
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: install on windows
        env:
          MOONBIT_INSTALL_VERSION: bleeding
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Set-ExecutionPolicy RemoteSigned -Scope CurrentUser; irm https://cli.moonbitlang.com/install/powershell.ps1 | iex
          "C:\Users\runneradmin\.moon\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: moon version
        run: |
          moon version --all

      - name: cc version
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cc -v

      - name: moon check
        run: moon check --target native

      - name: Set ulimit and run moon test
        env: 
          MOON_CC: 'cc -fsanitize=address -fsanitize=undefined -g -fno-omit-frame-pointer'
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          ulimit -s 8176
          pushd tests
          moon test --target native -v
          moon test --target native --release -v
          popd
          git diff --exit-code

      - name: Setup MSVC
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1
      
      - name: Run moon test on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Set-ExecutionPolicy -Scope CurrentUser UnRestricted
          .\check_then_test.ps1 -Mode "CI"
          git diff --exit-code